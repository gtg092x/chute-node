{"name":"chute-node","body":"# Chute\r\n\r\nChute makes it possible for you to easily organize, store and serve photos and videos.  This NPM package provides you with a wrapper for the Chute API.\r\n\r\nYou can learn more about Chute [http://getchute.com](http://getchute.com) and explore the API at [http://picture.io](http://picture.io).\r\n\r\n# Installation\r\n\r\n`npm install chute`\r\n\r\n# Getting Started\r\n\r\n1. Sign up for an account at [Chute](http://auth.getchute.com/signup?authorization=4f541b8e38ecef3f4d000001)\r\n2. Install this library\r\n3. Read the [API docs](http://explore.picture.io) for better understanding\r\n4. Read the [annotated source](http://chute.github.com/chute-node/docs/chute.html) for even better understanding of what's under the hood\r\n\r\n# Usage\r\n\r\nInitialize:\r\n\r\n```javascript\r\nvar Chute = require('chute');\r\nvar client = new Chute;\r\nclient.set({\r\n\ttoken: 'access token',\r\n\tid: 'app id'\r\n});\r\n```\r\n\r\n## Chutes\r\n\r\nChutes allow you to manage sets of photos - you can think of them like albums.\r\n\r\nFind:\r\n\r\n```javascript\r\n// all chutes found\r\nclient.chutes.all(function(err, chutes){\r\n\tfor(var i = 0; i < chutes.length; i++) {\r\n\t\tchute.id;\r\n\t}\r\n});\r\n\r\n// chute with ID=12345 found\r\nclient.chutes.find({ id: 12345 }, function(err, chute){\r\n\tchute.id;\r\n});\r\n\r\n// chute with ID=12345 found with contributors list inside\r\nclient.chutes.find({ id: 12345, contributors: true }, function(err, chute){\r\n\tchute.contributors;\r\n});\r\n\r\n// chute with ID=12345 found with members list inside\r\nclient.chutes.find({ id: 12345, members: true }, function(err, chute){\r\n\tchute.members;\r\n});\r\n\r\n// chute with ID=12345 found with parcels list inside\r\nclient.chutes.find({ id: 12345, parcels: true }, function(err, chute){\r\n\tchute.parcels;\r\n});\r\n\r\n// chute with ID=12345 found with everything inside\r\nclient.chutes.find({\r\n\tid: 12345,\r\n\tcontributors: true,\r\n\tmembers: true,\r\n\tparcels: true\r\n}, function(err, chute){\r\n\tchute.id;\r\n});\r\n```\r\n\r\nCreate:\r\n\r\n```javascript\r\n// chute created\r\nclient.chutes.create({ name: 'Testing' }, function(err, chute){\r\n\tchute.id;\r\n});\r\n```\r\n\r\nUpdate:\r\n\r\n```javascript\r\n// chute with ID=235345 changed name to 'New name'\r\nclient.chutes.update({ id: 235345, name: 'New name' }, function(err, chute){\r\n\tchute.id;\r\n});\r\n```\r\n\r\nRemove:\r\n\r\n```javascript\r\n// chute with ID=12345 removed\r\nclient.chutes.remove({ id: 12345 }, function(err){\r\n\t\r\n});\r\n```\r\n\r\n## Assets\r\n\r\nAssets represent photos and videos contained within a Chute.\r\n\r\nFind:\r\n\r\n```javascript\r\n// asset with ID=12345 found\r\nclient.assets.find({ id: 12345 }, function(err, asset){\r\n\tasset.id;\r\n});\r\n\r\n// asset with ID=12345 found with comments inside\r\nclient.assets.find({ id: 12345, comments: true }, function(err, asset){\r\n\tasset.comments;\r\n});\r\n```\r\n\r\nCustomize:\r\n\r\n```javascript\r\nclient.assets.find({ id: 12345 }, function(err, asset){\r\n\tasset.url // http://media.getchute.com/media/:id\r\n\tasset.url.width(640) // http://media.getchute.com/media/:id/w/640\r\n\tasset.url.height(480) // http://media.getchute.com/media/:id/h/480\r\n\tasset.url.fill(640, 480) // http://media.getchute.com/media/:id/640x480\r\n\tasset.url.fit(640, 480) // http://media.getchute.com/media/:id/fit/640x480\r\n});\r\n```\r\n\r\nLike:\r\n\r\n```javascript\r\nclient.assets.heart({ id: 12345 }, function(err, asset){\r\n\t// +1 to asset with ID=12345\r\n});\r\n\r\nclient.assets.unheart({ id: 12345 }, function(err, asset){\r\n\t// -1 to asset with ID=12345\r\n});\r\n```\r\n\r\nRemove:\r\n\r\n```javascript\r\nclient.assets.remove({ id: 12345 }, function(err){\r\n\t// asset with ID=12345 removed\r\n});\r\n```\r\n\r\n## Bundles\r\n\r\nBundles allow you to create dynamic sets of photos\r\n\r\nFind:\r\n\r\n```javascript\r\n// bundle with ID=12345\r\nclient.bundles.find({ id: 12345 }, function(err, bundle){\r\n\tbundle.id;\r\n});\r\n```\r\n\r\nCreate:\r\n\r\n```javascript\r\nclient.bundles.create({\r\n\tids: [134234, 534125]\r\n}, function(err, bundle){\r\n\t// bundle with assets 134234 and 534125 created\r\n});\r\n```\r\n\r\nRemove:\r\n\r\n```javascript\r\nclient.bundles.remove({ id: 12345 }, function(err){\r\n\t// bundle with ID=12345 removed\r\n});\r\n```\r\n\r\n## Uploads\r\n\r\nChute provides a simple upload flow that provides image processing and more.\r\n\r\n```javascript\r\n// info about files\r\nvar files = [{ filename: 'image.jpg', size: 124235, md5: '0cc175b9c0f1b6a831c399e269772661' }];\r\n// ID of chute which you want upload image to\r\nvar chutes = [12423523];\r\n\r\nclient.uploads.upload({ files: files, chutes: chutes }, function(err, assets){\r\n\t// assets is an array of asset IDs, which were just uploaded\r\n});\r\n```\r\n\r\n# Tests\r\n\r\nPut your app credentials(access token and id) into test and run it with:\r\n`mocha --timeout 10000`","tagline":"Node.js Module for Chute API ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}